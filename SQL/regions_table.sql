USE  TECHLABS
GO

CREATE TABLE REGIONS
    ( REGION_ID      INT 
       CONSTRAINT  REGION_ID_NN NOT NULL 
    , REGION_NAME    VARCHAR(25) 
    );


ALTER TABLE REGIONS
ADD CONSTRAINT REG_ID_PK
                 PRIMARY KEY (REGION_ID)
     ;
     
     
     CREATE TABLE COUNTRIES 
    ( COUNTRY_ID      CHAR(2) 
       CONSTRAINT  COUNTRY_ID_NN NOT NULL 
    , COUNTRY_NAME    VARCHAR(40) 
    , REGION_ID       INT 
    , CONSTRAINT     COUNTRY_C_ID_PK 
                     PRIMARY KEY (COUNTRY_ID) 
    ) 
    
    
    
    ALTER TABLE COUNTRIES
ADD  CONSTRAINT COUNTR_REG_FK
                 FOREIGN KEY (REGION_ID)
                  REFERENCES REGIONS(REGION_ID) 
 
 
 
 
 CREATE TABLE LOCATIONS
    ( LOCATION_ID    INT NOT NULL
    , STREET_ADDRESS VARCHAR(40)
    , POSTAL_CODE    VARCHAR(12)
    , CITY       VARCHAR(30)
        CONSTRAINT     LOC_CITY_NN  NOT NULL
    , STATE_PROVINCE VARCHAR(25)
    , COUNTRY_ID     CHAR(2)
    ) ;
    
    
    
    
    ALTER TABLE LOCATIONS
ADD  CONSTRAINT LOC_ID_PK
                 PRIMARY KEY (LOCATION_ID)
    , CONSTRAINT LOC_C_ID_FK
                 FOREIGN KEY (COUNTRY_ID)
                  REFERENCES COUNTRIES(COUNTRY_ID) 
                  
                  
                  
                  
                  
                  
INSERT INTO REGIONS VALUES( 1, 'EUROPE');
INSERT INTO REGIONS VALUES( 2, 'AMERICAS');
INSERT INTO REGIONS VALUES( 3, 'ASIA');
INSERT INTO REGIONS VALUES( 4, 'MIDDLE EAST AND AFRICA');





INSERT INTO COUNTRIES VALUES( 'IT', 'ITALY', 1);
INSERT INTO COUNTRIES VALUES( 'JP', 'JAPAN', 3);
INSERT INTO COUNTRIES VALUES( 'US', 'UNITED STATES OF AMERICA', 2);
INSERT INTO COUNTRIES VALUES( 'CA', 'CANADA', 2);
INSERT INTO COUNTRIES VALUES( 'CN', 'CHINA', 3);
INSERT INTO COUNTRIES VALUES( 'IN', 'INDIA', 3);
INSERT INTO COUNTRIES VALUES( 'AU', 'AUSTRALIA', 3);
INSERT INTO COUNTRIES VALUES( 'ZW', 'ZIMBABWE',4);


INSERT INTO COUNTRIES VALUES( 'SG', 'SINGAPORE', 3);
INSERT INTO COUNTRIES VALUES( 'UK', 'UNITED KINGDOM', 1);
INSERT INTO COUNTRIES VALUES( 'FR', 'FRANCE', 1);
INSERT INTO COUNTRIES VALUES( 'DE', 'GERMANY', 1);
INSERT INTO COUNTRIES VALUES( 'ZM', 'ZAMBIA', 4);
INSERT INTO COUNTRIES VALUES( 'EG', 'EGYPT', 4);
INSERT INTO COUNTRIES VALUES( 'BR', 'BRAZIL', 2);
INSERT INTO COUNTRIES VALUES( 'CH', 'SWITZERLAND', 1);


INSERT INTO COUNTRIES VALUES( 'NL', 'NETHERLANDS', 1);
INSERT INTO COUNTRIES VALUES( 'MX', 'MEXICO', 2);
INSERT INTO COUNTRIES VALUES( 'KW', 'KUWAIT', 4);
INSERT INTO COUNTRIES VALUES( 'IL', 'ISRAEL', 4);
INSERT INTO COUNTRIES VALUES( 'DK', 'DENMARK', 1);
INSERT INTO COUNTRIES VALUES( 'HK', 'HONGKONG', 3);
INSERT INTO COUNTRIES VALUES( 'NG', 'NIGERIA', 4);
INSERT INTO COUNTRIES VALUES( 'AR', 'ARGENTINA', 2);
INSERT INTO COUNTRIES VALUES( 'BE', 'BELGIUM', 1);




INSERT INTO LOCATIONS VALUES( 1000, '1297 VIA COLA DI RIE', '00989', 'ROMA', NULL, 'IT');
INSERT INTO LOCATIONS VALUES( 1100, '93091 CALLE DELLA TESTA', '10934', 'VENICE', NULL, 'IT');
INSERT INTO LOCATIONS VALUES( 1200, '2017 SHINJUKU-KU', '1689', 'TOKYO', 'TOKYO PREFECTURE', 'JP');
INSERT INTO LOCATIONS VALUES( 1300, '9450 KAMIYA-CHO', '6823', 'HIROSHIMA', NULL, 'JP');
INSERT INTO LOCATIONS VALUES( 1400, '2014 JABBERWOCKY RD', '26192', 'SOUTHLAKE', 'TEXAS', 'US');
INSERT INTO LOCATIONS VALUES( 1500, '2011 INTERIORS BLVD', '99236', 'SOUTH SAN FRANCISCO', 'CALIFORNIA', 'US');
INSERT INTO LOCATIONS VALUES( 1600, '2007 ZAGORA ST', '50090', 'SOUTH BRUNSWICK', 'NEW JERSEY', 'US');
INSERT INTO LOCATIONS VALUES( 1700, '2004 CHARADE RD', '98199', 'SEATTLE', 'WASHINGTON', 'US');
INSERT INTO LOCATIONS VALUES( 1800, '147 SPADINA AVE', 'M5V 2L7', 'TORONTO', 'ONTARIO', 'CA');
INSERT INTO LOCATIONS VALUES( 1900, '6092 BOXWOOD ST', 'YSW 9T2', 'WHITEHORSE', 'YUKON', 'CA');

INSERT INTO LOCATIONS VALUES( 2000, 'HI-TECH PROJECTS', '380051', 'AHMEDABAD', 'GUJARAT', 'IN');

SELECT * FROM LOCATIONS;
SELECT COUNT(*) FROM COUNTRIES; 
SELECT * FROM REGIONS;
GO

--DISPLAY REGIONS NAME , COUNTRY NAME AND LOCATION ADDRESS 
SELECT R.REGION_NAME , C.COUNTRY_NAME, L.LOCATION_ID, L.STREET_ADDRESS 
	FROM REGIONS AS R  INNER JOIN COUNTRIES AS C 
	ON C.REGION_ID = R.REGION_ID INNER JOIN LOCATIONS AS L 
	ON L.COUNTRY_ID= C.COUNTRY_ID;

--DISPLAY REGIONS WHERE  NO OF COUNTRIES ARE PRESENT
SELECT * FROM REGIONS  WHERE REGION_ID NOT IN (SELECT REGION_ID FROM COUNTRIES);
 
--DISPLAY COUNTRIES WHERE  NO OF LOCATIONS ARE PRESENT
SELECT * FROM COUNTRIES  WHERE COUNTRY_ID NOT IN (SELECT COUNTRY_ID FROM LOCATIONS);

--DISPLAY REGIONS WISE AND NO OF COUNTRIES
SELECT R.REGION_ID, COUNT(C.COUNTRY_ID) AS NO_OF_COUNTRIES FROM REGIONS AS R INNER JOIN COUNTRIES AS C ON R.REGION_ID = C.REGION_ID GROUP BY R.REGION_ID;

--DISPLAY COUNTRY WISE AND NO OF LOCATIONS
SELECT C.COUNTRY_ID, C.COUNTRY_NAME, COUNT(L.COUNTRY_ID) AS NO_OF_LOCATIONS FROM COUNTRIES AS C INNER JOIN LOCATIONS AS L ON C.COUNTRY_ID = L.COUNTRY_ID GROUP BY C.COUNTRY_NAME,C.COUNTRY_ID;
